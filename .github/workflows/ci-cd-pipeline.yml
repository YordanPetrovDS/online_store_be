name: CI/CD Workflow

on: [push]

jobs:
    test-lint-format:
        name: Test, Lint and Format
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
                    POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
                    POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.9'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Set environment variables
              run: |
                  echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
                  echo "CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}" >> $GITHUB_ENV
                  echo "CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }}" >> $GITHUB_ENV
                  echo "DATABASE_URL=postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
                  echo "TEST_DATABASE_URL=postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
                  echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> $GITHUB_ENV

            - name: Run migrations
              run: python manage.py migrate

            - name: Run linting
              run: flake8 . --count --show-source --statistics

            - name: Run formatting
              run: black --check --diff .

            - name: Run tests
              run: python manage.py test

    deploy:
        name: Deploy to Server
        runs-on: ubuntu-latest
        needs: test-lint-format
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Executing remote SSH commands using SSH key
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSH_PRIV_KEY }}
                  port: ${{ secrets.PORT }}
                  script: cd ~/online_store_be && bash pull_restart.sh
